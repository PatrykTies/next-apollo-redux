{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nexport var actionTypes = {\n  LOAD_DATA: 'LOAD_DATA',\n  LOAD_DATA_SUCCESS: 'LOAD_DATA_SUCCESS',\n  LOAD_DATA_ERROR: 'LOAD_DATA_ERROR'\n};\nimport jsonPlaceholderApi from '../api/jsonPlaceholderApi.js';\nexport var loadData = function loadData(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return jsonPlaceholderApi.get(\"/posts/\".concat(id));\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: actionTypes.LOAD_DATA_SUCCESS,\n                  payload: response\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport function loadDataError(error) {\n  return {\n    type: actionTypes.LOAD_DATA_ERROR,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/patrykties/Desktop/LEARNING/with-apollo-and-redux-saga/lib/placeholder/actions.js"],"names":["actionTypes","LOAD_DATA","LOAD_DATA_SUCCESS","LOAD_DATA_ERROR","jsonPlaceholderApi","loadData","id","dispatch","get","response","type","payload","loadDataError","error"],"mappings":";;AAAA,OAAO,IAAMA,WAAW,GAAG;AACzBC,EAAAA,SAAS,EAAE,WADc;AAEzBC,EAAAA,iBAAiB,EAAE,mBAFM;AAGzBC,EAAAA,eAAe,EAAE;AAHQ,CAApB;AAMP,OAAOC,kBAAP,MAA+B,8BAA/B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAQ,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLH,kBAAkB,CAACI,GAAnB,kBAAiCF,EAAjC,EADK;;AAAA;AACtBG,gBAAAA,QADsB;AAE5BF,gBAAAA,QAAQ,CAAC;AAACG,kBAAAA,IAAI,EAAEV,WAAW,CAACE,iBAAnB;AAAsCS,kBAAAA,OAAO,EAAEF;AAA/C,iBAAD,CAAR;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAKP,OAAO,SAASG,aAAT,CAAwBC,KAAxB,EAA+B;AACpC,SAAO;AACLH,IAAAA,IAAI,EAAEV,WAAW,CAACG,eADb;AAELU,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID","sourcesContent":["export const actionTypes = {\n  LOAD_DATA: 'LOAD_DATA',\n  LOAD_DATA_SUCCESS: 'LOAD_DATA_SUCCESS',\n  LOAD_DATA_ERROR: 'LOAD_DATA_ERROR'\n}\n\nimport jsonPlaceholderApi from '../api/jsonPlaceholderApi.js';\n\nexport const loadData = (id) => async dispatch => {\n    const response = await jsonPlaceholderApi.get(`/posts/${id}`)\n    dispatch({type: actionTypes.LOAD_DATA_SUCCESS, payload: response}) \n}\n\nexport function loadDataError (error) {\n  return {\n    type: actionTypes.LOAD_DATA_ERROR,\n    error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}