{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { allPosts, allPostsQueryVars } from './PostList';\n\nfunction Submit({\n  createPost\n}) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    createPost(formData.get('title'), formData.get('url'));\n    form.reset();\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jsx-778314498\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-778314498\"\n  }, \"Submit\"), __jsx(\"input\", {\n    placeholder: \"title\",\n    name: \"title\",\n    type: \"text\",\n    required: true,\n    className: \"jsx-778314498\"\n  }), __jsx(\"input\", {\n    placeholder: \"url\",\n    name: \"url\",\n    type: \"url\",\n    required: true,\n    className: \"jsx-778314498\"\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-778314498\"\n  }, \"Submit\"), __jsx(_JSXStyle, {\n    id: \"778314498\"\n  }, \"form.jsx-778314498{border-bottom:1px solid #ececec;padding-bottom:20px;margin-bottom:20px;}input.jsx-778314498{display:block;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyeWt0aWVzL0Rlc2t0b3AvTEVBUk5JTkcvd2l0aC1hcG9sbG8tYW5kLXJlZHV4LXNhZ2EvY29tcG9uZW50cy9TdWJtaXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0JrQixBQUcyQyxBQUtsQixjQUNLLGtCQUxDLENBTXRCLG1CQUxxQixtQkFDckIiLCJmaWxlIjoiL1VzZXJzL3BhdHJ5a3RpZXMvRGVza3RvcC9MRUFSTklORy93aXRoLWFwb2xsby1hbmQtcmVkdXgtc2FnYS9jb21wb25lbnRzL1N1Ym1pdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdyYXBocWwgfSBmcm9tICdyZWFjdC1hcG9sbG8nXG5pbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJ1xuaW1wb3J0IHsgYWxsUG9zdHMsIGFsbFBvc3RzUXVlcnlWYXJzIH0gZnJvbSAnLi9Qb3N0TGlzdCdcblxuZnVuY3Rpb24gU3VibWl0ICh7IGNyZWF0ZVBvc3QgfSkge1xuICBmdW5jdGlvbiBoYW5kbGVTdWJtaXQgKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuXG4gICAgY29uc3QgZm9ybSA9IGV2ZW50LnRhcmdldFxuXG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgd2luZG93LkZvcm1EYXRhKGZvcm0pXG4gICAgY3JlYXRlUG9zdChmb3JtRGF0YS5nZXQoJ3RpdGxlJyksIGZvcm1EYXRhLmdldCgndXJsJykpXG5cbiAgICBmb3JtLnJlc2V0KClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGZvcm0gb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdH0+XG4gICAgICA8aDE+U3VibWl0PC9oMT5cbiAgICAgIDxpbnB1dCBwbGFjZWhvbGRlcj0ndGl0bGUnIG5hbWU9J3RpdGxlJyB0eXBlPSd0ZXh0JyByZXF1aXJlZCAvPlxuICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPSd1cmwnIG5hbWU9J3VybCcgdHlwZT0ndXJsJyByZXF1aXJlZCAvPlxuICAgICAgPGJ1dHRvbiB0eXBlPSdzdWJtaXQnPlN1Ym1pdDwvYnV0dG9uPlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBmb3JtIHtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VjZWNlYztcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICB9XG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9mb3JtPlxuICApXG59XG5cbmNvbnN0IGNyZWF0ZVBvc3QgPSBncWxgXG4gIG11dGF0aW9uIGNyZWF0ZVBvc3QoJHRpdGxlOiBTdHJpbmchLCAkdXJsOiBTdHJpbmchKSB7XG4gICAgY3JlYXRlUG9zdCh0aXRsZTogJHRpdGxlLCB1cmw6ICR1cmwpIHtcbiAgICAgIGlkXG4gICAgICB0aXRsZVxuICAgICAgdm90ZXNcbiAgICAgIHVybFxuICAgICAgY3JlYXRlZEF0XG4gICAgfVxuICB9XG5gXG5cbmV4cG9ydCBkZWZhdWx0IGdyYXBocWwoY3JlYXRlUG9zdCwge1xuICBwcm9wczogKHsgbXV0YXRlIH0pID0+ICh7XG4gICAgY3JlYXRlUG9zdDogKHRpdGxlLCB1cmwpID0+XG4gICAgICBtdXRhdGUoe1xuICAgICAgICB2YXJpYWJsZXM6IHsgdGl0bGUsIHVybCB9LFxuICAgICAgICB1cGRhdGU6IChwcm94eSwgeyBkYXRhOiB7IGNyZWF0ZVBvc3QgfSB9KSA9PiB7XG4gICAgICAgICAgY29uc3QgZGF0YSA9IHByb3h5LnJlYWRRdWVyeSh7XG4gICAgICAgICAgICBxdWVyeTogYWxsUG9zdHMsXG4gICAgICAgICAgICB2YXJpYWJsZXM6IGFsbFBvc3RzUXVlcnlWYXJzXG4gICAgICAgICAgfSlcbiAgICAgICAgICBwcm94eS53cml0ZVF1ZXJ5KHtcbiAgICAgICAgICAgIHF1ZXJ5OiBhbGxQb3N0cyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgICAgICAgYWxsUG9zdHM6IFtjcmVhdGVQb3N0LCAuLi5kYXRhLmFsbFBvc3RzXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHZhcmlhYmxlczogYWxsUG9zdHNRdWVyeVZhcnNcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9KVxuICB9KVxufSkoU3VibWl0KVxuIl19 */\\n/*@ sourceURL=/Users/patrykties/Desktop/LEARNING/with-apollo-and-redux-saga/components/Submit.js */\"));\n}\n\nconst createPost = gql`\n  mutation createPost($title: String!, $url: String!) {\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }\n`;\nexport default graphql(createPost, {\n  props: ({\n    mutate\n  }) => ({\n    createPost: (title, url) => mutate({\n      variables: {\n        title,\n        url\n      },\n      update: (proxy, {\n        data: {\n          createPost\n        }\n      }) => {\n        const data = proxy.readQuery({\n          query: allPosts,\n          variables: allPostsQueryVars\n        });\n        proxy.writeQuery({\n          query: allPosts,\n          data: _objectSpread({}, data, {\n            allPosts: [createPost, ...data.allPosts]\n          }),\n          variables: allPostsQueryVars\n        });\n      }\n    })\n  })\n})(Submit);","map":{"version":3,"sources":["/Users/patrykties/Desktop/LEARNING/with-apollo-and-redux-saga/components/Submit.js"],"names":["graphql","gql","allPosts","allPostsQueryVars","Submit","createPost","handleSubmit","event","preventDefault","form","target","formData","window","FormData","get","reset","props","mutate","title","url","variables","update","proxy","data","readQuery","query","writeQuery"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,YAA5C;;AAEA,SAASC,MAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAiC;AAC/B,WAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AAEA,UAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAX,CAAoBJ,IAApB,CAAjB;AACAJ,IAAAA,UAAU,CAACM,QAAQ,CAACG,GAAT,CAAa,OAAb,CAAD,EAAwBH,QAAQ,CAACG,GAAT,CAAa,KAAb,CAAxB,CAAV;AAEAL,IAAAA,IAAI,CAACM,KAAL;AACD;;AAED,SACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA,KACE;AAAA;AAAA,cADF,EAEE;AAAO,IAAA,WAAW,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,IAAI,EAAC,MAA7C;AAAoD,IAAA,QAAQ,MAA5D;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,WAAW,EAAC,KAAnB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAoC,IAAA,IAAI,EAAC,KAAzC;AAA+C,IAAA,QAAQ,MAAvD;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA,cAJF;AAAA;AAAA,o/FADF;AAmBD;;AAED,MAAMD,UAAU,GAAGJ,GAAI;;;;;;;;;;CAAvB;AAYA,eAAeD,OAAO,CAACK,UAAD,EAAa;AACjCW,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,MAAiB;AACtBZ,IAAAA,UAAU,EAAE,CAACa,KAAD,EAAQC,GAAR,KACVF,MAAM,CAAC;AACLG,MAAAA,SAAS,EAAE;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT,OADN;AAELE,MAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAElB,UAAAA;AAAF;AAAR,OAAR,KAAqC;AAC3C,cAAMkB,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAC3BC,UAAAA,KAAK,EAAEvB,QADoB;AAE3BkB,UAAAA,SAAS,EAAEjB;AAFgB,SAAhB,CAAb;AAIAmB,QAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,UAAAA,KAAK,EAAEvB,QADQ;AAEfqB,UAAAA,IAAI,oBACCA,IADD;AAEFrB,YAAAA,QAAQ,EAAE,CAACG,UAAD,EAAa,GAAGkB,IAAI,CAACrB,QAArB;AAFR,YAFW;AAMfkB,UAAAA,SAAS,EAAEjB;AANI,SAAjB;AAQD;AAfI,KAAD;AAFc,GAAjB;AAD0B,CAAb,CAAP,CAqBZC,MArBY,CAAf","sourcesContent":["import { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { allPosts, allPostsQueryVars } from './PostList'\n\nfunction Submit ({ createPost }) {\n  function handleSubmit (event) {\n    event.preventDefault()\n\n    const form = event.target\n\n    const formData = new window.FormData(form)\n    createPost(formData.get('title'), formData.get('url'))\n\n    form.reset()\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Submit</h1>\n      <input placeholder='title' name='title' type='text' required />\n      <input placeholder='url' name='url' type='url' required />\n      <button type='submit'>Submit</button>\n      <style jsx>{`\n        form {\n          border-bottom: 1px solid #ececec;\n          padding-bottom: 20px;\n          margin-bottom: 20px;\n        }\n        input {\n          display: block;\n          margin-bottom: 10px;\n        }\n      `}</style>\n    </form>\n  )\n}\n\nconst createPost = gql`\n  mutation createPost($title: String!, $url: String!) {\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }\n`\n\nexport default graphql(createPost, {\n  props: ({ mutate }) => ({\n    createPost: (title, url) =>\n      mutate({\n        variables: { title, url },\n        update: (proxy, { data: { createPost } }) => {\n          const data = proxy.readQuery({\n            query: allPosts,\n            variables: allPostsQueryVars\n          })\n          proxy.writeQuery({\n            query: allPosts,\n            data: {\n              ...data,\n              allPosts: [createPost, ...data.allPosts]\n            },\n            variables: allPostsQueryVars\n          })\n        }\n      })\n  })\n})(Submit)\n"]},"metadata":{},"sourceType":"module"}